void fn0100(word16 wArg40, word16 wArg7E, word16 wArgC2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0040:[0..15] Stack +007E:[0..15] Stack +00C2:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0100_exit:
fn0100_entry:
l0100:
	__mov(0x8000<p16>, 0x04C2<p16>)
	__mov(0x80E9<p16>, 0x05B7<p16>)
	fn0111(wArg40, wArg7E, wArgC2)
l00000110:


void fn0111(word16 wArg42, word16 wArg80, word16 wArgC4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0100
// MayUse:  Stack +0042:[0..15] Stack +0080:[0..15] Stack +00C4:[0..15]
// LiveOut:
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp15 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved:
fn0111_entry:
l0111:
	fn04B9(0x8000<16>)
	real48 gp0_gp1_gp2_12 = Mem0[0x80CE<p16>:real48]
	word16 gp2_15 = SLICE(gp0_gp1_gp2_12, word16, 0)
	fn01E6(gp0_gp1_gp2_12, gp2_15)
	word16 gp8_875
	word16 gp9_876
	word16 gp10_877
	word16 gp11_878
	word16 gp14_879
	fn04AE(gp0_gp1_gp2_12, gp2_15, out gp8_875, out gp9_876, out gp10_877, out gp11_878, out gp14_879)
	fn045A(0xA<16>)
	fn04B9(0x800D<16>)
	real48 gp0_gp1_gp2_52 = Mem0[0x80D1<p16>:real48]
	word16 gp2_55 = SLICE(gp0_gp1_gp2_52, word16, 0)
	fn01E6(gp0_gp1_gp2_52, gp2_55)
	word16 gp8_880
	word16 gp9_881
	word16 gp10_882
	word16 gp11_883
	word16 gp14_884
	fn04AE(gp0_gp1_gp2_52, gp2_55, out gp8_880, out gp9_881, out gp10_882, out gp11_883, out gp14_884)
	fn045A(0xA<16>)
	fn04B9(0x801A<16>)
	real48 gp0_gp1_gp2_92 = Mem0[0x80D4<p16>:real48]
	word16 gp2_95 = SLICE(gp0_gp1_gp2_92, word16, 0)
	fn01E6(gp0_gp1_gp2_92, gp2_95)
	word16 gp8_885
	word16 gp9_886
	word16 gp10_887
	word16 gp11_888
	word16 gp14_889
	fn04AE(gp0_gp1_gp2_92, gp2_95, out gp8_885, out gp9_886, out gp10_887, out gp11_888, out gp14_889)
	fn045A(0xA<16>)
	fn04B9(0x8027<16>)
	real48 gp0_gp1_gp2_132 = Mem0[0x80D7<p16>:real48]
	word16 gp2_135 = SLICE(gp0_gp1_gp2_132, word16, 0)
	fn01E6(gp0_gp1_gp2_132, gp2_135)
	word16 gp11_147
	word16 gp8_890
	word16 gp9_891
	word16 gp10_892
	word16 gp14_893
	word16 gp3_152 = fn04AE(gp0_gp1_gp2_132, gp2_135, out gp8_890, out gp9_891, out gp10_892, out gp11_147, out gp14_893)
	fn045A(0xA<16>)
	fn04B9(0x8036<16>)
	real48 gp0_gp1_gp2_172 = Mem0[0x80DA<p16>:real48]
	word32 gp12_gp13_851 = <invalid>
	word32 gp0_gp1_852 = <invalid>
	word16 gp11_203
	word16 gp8_894
	word16 gp9_895
	word16 gp10_896
	word16 gp14_897
	word16 gp3_208 = fn04AE(gp0_gp1_852, fn032A(gp0_gp1_gp2_172, gp12_gp13_851, SLICE(gp0_gp1_gp2_172, word16, 0), gp3_152, gp11_147, wArg42, wArgC4), out gp8_894, out gp9_895, out gp10_896, out gp11_203, out gp14_897)
	fn045A(0xA<16>)
	fn04B9(0x8042<16>)
	real48 gp0_gp1_gp2_228 = Mem0[0x80DD<p16>:real48]
	word16 gp15_194 = <invalid>
	word32 gp12_gp13_853 = <invalid>
	word32 gp0_gp1_854 = <invalid>
	word16 gp11_259
	word16 gp8_898
	word16 gp9_899
	word16 gp10_900
	word16 gp14_901
	word16 gp3_264 = fn04AE(gp0_gp1_854, fn032A(gp0_gp1_gp2_228, gp12_gp13_853, SLICE(gp0_gp1_gp2_228, word16, 0), gp3_208, gp11_203, Mem0[gp15_194 + 66<i16>:word16], Mem0[gp15_194 + 196<i16>:word16]), out gp8_898, out gp9_899, out gp10_900, out gp11_259, out gp14_901)
	fn045A(0xA<16>)
	fn04B9(0x804F<16>)
	real48 gp0_gp1_gp2_284 = Mem0[0x80E0<p16>:real48]
	word16 gp15_250 = <invalid>
	word32 gp12_gp13_855 = <invalid>
	word32 gp0_gp1_856 = <invalid>
	word16 gp11_315
	word16 gp8_902
	word16 gp9_903
	word16 gp10_904
	word16 gp14_905
	word16 gp3_320 = fn04AE(gp0_gp1_856, fn032A(gp0_gp1_gp2_284, gp12_gp13_855, SLICE(gp0_gp1_gp2_284, word16, 0), gp3_264, gp11_259, Mem0[gp15_250 + 66<i16>:word16], Mem0[gp15_250 + 196<i16>:word16]), out gp8_902, out gp9_903, out gp10_904, out gp11_315, out gp14_905)
	fn045A(0xA<16>)
	fn04B9(0x805C<16>)
	real48 gp0_gp1_gp2_340 = Mem0[0x80E3<p16>:real48]
	word16 gp15_306 = <invalid>
	word32 gp12_gp13_857 = <invalid>
	word32 gp0_gp1_858 = <invalid>
	word16 gp11_371
	word16 gp8_906
	word16 gp9_907
	word16 gp10_908
	word16 gp14_909
	word16 gp3_376 = fn04AE(gp0_gp1_858, fn032A(gp0_gp1_gp2_340, gp12_gp13_857, SLICE(gp0_gp1_gp2_340, word16, 0), gp3_320, gp11_315, Mem0[gp15_306 + 66<i16>:word16], Mem0[gp15_306 + 196<i16>:word16]), out gp8_906, out gp9_907, out gp10_908, out gp11_371, out gp14_909)
	fn045A(0xA<16>)
	fn04B9(0x806B<16>)
	real48 gp0_gp1_gp2_396 = Mem0[0x80E6<p16>:real48]
	word16 gp15_362 = <invalid>
	word32 gp12_gp13_859 = <invalid>
	word32 gp0_gp1_860 = <invalid>
	word16 gp11_427
	word16 gp8_910
	word16 gp9_911
	word16 gp10_912
	word16 gp14_913
	word16 gp3_432 = fn04AE(gp0_gp1_860, fn032A(gp0_gp1_gp2_396, gp12_gp13_859, SLICE(gp0_gp1_gp2_396, word16, 0), gp3_376, gp11_371, Mem0[gp15_362 + 66<i16>:word16], Mem0[gp15_362 + 196<i16>:word16]), out gp8_910, out gp9_911, out gp10_912, out gp11_427, out gp14_913)
	fn045A(0xA<16>)
	fn04B9(0x8076<16>)
	real48 gp0_gp1_gp2_452 = Mem0[0x80CE<p16>:real48]
	word16 gp15_418 = <invalid>
	word32 gp12_gp13_861 = <invalid>
	word32 gp0_gp1_862 = <invalid>
	word16 gp10_482
	word16 gp11_483
	word16 gp8_493
	word16 gp9_494
	word16 gp14_914
	fn04AE(gp0_gp1_862, fn032A(gp0_gp1_gp2_452, gp12_gp13_861, SLICE(gp0_gp1_gp2_452, word16, 0), gp3_432, gp11_427, Mem0[gp15_418 + 66<i16>:word16], Mem0[gp15_418 + 196<i16>:word16]), out gp8_493, out gp9_494, out gp10_482, out gp11_483, out gp14_914)
	fn045A(0xA<16>)
	fn04B9(0x8082<16>)
	real48 gp0_gp1_gp2_508 = Mem0[0x80DA<p16>:real48]
	word16 gp15_474 = <invalid>
	word32 gp12_gp13_863 = <invalid>
	word32 gp0_gp1_864 = <invalid>
	word16 gp10_539
	word16 gp11_540
	word16 gp8_550
	word16 gp9_551
	word16 gp14_915
	fn04AE(gp0_gp1_864, fn034E(gp0_gp1_gp2_508, gp12_gp13_863, SLICE(gp0_gp1_gp2_508, word16, 0), gp8_493, gp9_494, gp10_482, gp11_483, Mem0[gp15_474 + 100<i16>:word16], Mem0[gp15_474 + 196<i16>:word16]), out gp8_550, out gp9_551, out gp10_539, out gp11_540, out gp14_915)
	fn045A(0xA<16>)
	fn04B9(0x808E<16>)
	real48 gp0_gp1_gp2_565 = Mem0[0x80DD<p16>:real48]
	word16 gp15_530 = <invalid>
	word32 gp12_gp13_865 = <invalid>
	word32 gp0_gp1_866 = <invalid>
	word16 gp10_596
	word16 gp11_597
	word16 gp8_607
	word16 gp9_608
	word16 gp14_916
	fn04AE(gp0_gp1_866, fn034E(gp0_gp1_gp2_565, gp12_gp13_865, SLICE(gp0_gp1_gp2_565, word16, 0), gp8_550, gp9_551, gp10_539, gp11_540, Mem0[gp15_530 + 0x66<16>:word16], Mem0[gp15_530 + 0xC6<16>:word16]), out gp8_607, out gp9_608, out gp10_596, out gp11_597, out gp14_916)
	fn045A(0xA<16>)
	fn04B9(0x809B<16>)
	real48 gp0_gp1_gp2_622 = Mem0[0x80E0<p16>:real48]
	word16 gp15_587 = <invalid>
	word32 gp12_gp13_867 = <invalid>
	word32 gp0_gp1_868 = <invalid>
	word16 gp10_653
	word16 gp11_654
	word16 gp8_664
	word16 gp9_665
	word16 gp14_917
	fn04AE(gp0_gp1_868, fn034E(gp0_gp1_gp2_622, gp12_gp13_867, SLICE(gp0_gp1_gp2_622, word16, 0), gp8_607, gp9_608, gp10_596, gp11_597, Mem0[gp15_587 + 0x66<16>:word16], Mem0[gp15_587 + 0xC6<16>:word16]), out gp8_664, out gp9_665, out gp10_653, out gp11_654, out gp14_917)
	fn045A(0xA<16>)
	fn04B9(0x80A8<16>)
	real48 gp0_gp1_gp2_679 = Mem0[0x80E3<p16>:real48]
	word16 gp15_644 = <invalid>
	word32 gp12_gp13_869 = <invalid>
	word32 gp0_gp1_870 = <invalid>
	word16 gp10_710
	word16 gp11_711
	word16 gp8_721
	word16 gp9_722
	word16 gp14_918
	fn04AE(gp0_gp1_870, fn034E(gp0_gp1_gp2_679, gp12_gp13_869, SLICE(gp0_gp1_gp2_679, word16, 0), gp8_664, gp9_665, gp10_653, gp11_654, Mem0[gp15_644 + 0x66<16>:word16], Mem0[gp15_644 + 0xC6<16>:word16]), out gp8_721, out gp9_722, out gp10_710, out gp11_711, out gp14_918)
	fn045A(0xA<16>)
	fn04B9(0x80B7<16>)
	real48 gp0_gp1_gp2_736 = Mem0[0x80E6<p16>:real48]
	word16 gp15_701 = <invalid>
	word32 gp12_gp13_871 = <invalid>
	word32 gp0_gp1_872 = <invalid>
	word16 gp10_767
	word16 gp11_768
	word16 gp8_778
	word16 gp9_779
	word16 gp14_919
	fn04AE(gp0_gp1_872, fn034E(gp0_gp1_gp2_736, gp12_gp13_871, SLICE(gp0_gp1_gp2_736, word16, 0), gp8_721, gp9_722, gp10_710, gp11_711, Mem0[gp15_701 + 0x66<16>:word16], Mem0[gp15_701 + 0xC6<16>:word16]), out gp8_778, out gp9_779, out gp10_767, out gp11_768, out gp14_919)
	fn045A(0xA<16>)
	fn04B9(0x80C2<16>)
	real48 gp0_gp1_gp2_793 = Mem0[0x80CE<p16>:real48]
	word16 gp15_758 = <invalid>
	word32 gp12_gp13_873 = <invalid>
	word32 gp0_gp1_874 = <invalid>
	word16 gp8_920
	word16 gp9_921
	word16 gp10_922
	word16 gp11_923
	word16 gp14_924
	fn04AE(gp0_gp1_874, fn034E(gp0_gp1_gp2_793, gp12_gp13_873, SLICE(gp0_gp1_gp2_793, word16, 0), gp8_778, gp9_779, gp10_767, gp11_768, Mem0[gp15_758 + 0x66<16>:word16], Mem0[gp15_758 + 0xC6<16>:word16]), out gp8_920, out gp9_921, out gp10_922, out gp11_923, out gp14_924)
	fn045A(0xA<16>)
	return
fn0111_exit:


void fn01E6(word32 gp0_gp1, word16 gp2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
// MayUse:  gp2:[0..15] Sequence gp0:gp1:[0..31]
// LiveOut:
// Trashed: PZN gp3 gp4 gp5
// Preserved: gp15
fn01E6_entry:
	word16 gp1 = SLICE(gp0_gp1, word16, 0)
	real48 gp0_gp1_gp2_9 = SEQ(gp0_gp1, gp2)
l01E6:
	branch gp0_gp1_gp2_9 != Mem0[0x05AB<p16>:real48] l000001EC
l000001EC:
	branch gp0_gp1_gp2_9 >= Mem0[0x05AB<p16>:real48] l000001EE
l000001ED:
	__bpt()
l000001EE:
	__xbr(gp1)
l000001EB:
	return
fn01E6_exit:


word16 fn02BF(word16 gp1, word16 wArgC8, ptr16 & gp1Out, ptr16 & gp14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn034E
// MayUse:  gp1:[0..15] Stack +00C8:[0..15]
// LiveOut: gp0 gp1 gp14
// Trashed: PZN gp0 gp1 gp14 gp5 gp6 gp7
// Preserved: gp15 gp2
fn02BF_entry:
	word16 gp3 = SLICE(gp2_gp3, word16, 0)
l02BF:
	branch gp1 >= 0<16> l00000325
l00000325:
	gp1Out = gp4
	gp14Out = fp
	return gp3
fn02BF_exit:
l000002C6:
	word16 gp2_25 = wArgC8 + 7<16> & 0xFFF8<16>
l000002CA:
	word32 gp1_gp2_45 = CONVERT(gp1 - gp2_25, word16, uint32)
l000002D4:
	branch gp1_gp2_45 > 7<32> l00000314
l00000314:
l00000304:
l000002F4:
l000002E4:
l000002D5:
	gp2_25 = Mem40[gp2_25 + 0x2DA<16>:word16]


word16 fn032A(word32 gp0_gp1, word32 gp12_gp13, word16 gp2, word16 gp3, word16 gp11, word16 wArg44, word16 wArgC6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
// MayUse:  gp11:[0..15] gp2:[0..15] gp3:[0..15] Sequence gp0:gp1:[0..31] Sequence gp12:gp13:[0..31] Stack +0044:[0..15] Stack +00C6:[0..15]
// LiveOut: gp15 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp15 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved:
fn032A_entry:
	word16 gp1 = SLICE(gp0_gp1, word16, 0)
	word16 gp0 = SLICE(gp0_gp1, word16, 16)
	word16 gp12 = SLICE(gp12_gp13, word16, 16)
	word32 gp1_gp2_18 = SEQ(gp1, gp2)
l032A:
	branch gp0_gp1 >= 0<32> l00000390
l00000390:
	branch gp0_gp1 != 0<32> l00000390_thunk_fn03E0
l00000390_thunk_fn03E0:
	word16 gp1_21
	word16 gp2_27
	word16 gp3_346
	word16 gp8_347
	word16 gp12_348
	word16 gp13_349
	word16 gp14_350
	fn03E0(gp1_gp2_18, gp0, gp3, out gp1_21, out gp2_27, out gp3_346, out gp8_347, out gp12_348, out gp13_349, out gp14_350)
	return gp2_27
l00000391:
	branch (gp1 & 0x8000<u16>) == 0<16> l00000397
l00000397:
	Mem47[gp11 + 2<16>:word16] = SEQ(Mem0[gp11 + 3<16>:byte], SLICE(gp2, byte, 0))
l00000394:
	Mem50[gp11 + 2<16>:word16] = SEQ(SLICE(gp2, byte, 0), Mem0[gp11 + 2<16>:byte])
l00000399:
	return wArg02
l00000331:
	word32 gp1_gp2_343
	word16 gp9_124
	real48 gp2_gp3_gp4_80 = Mem0[0x8122<p16>:real48]
	real48 gp5_gp6_gp7_95 = (SEQ(SLICE(gp2_gp3_gp4_80, word32, 0), SLICE(gp2_gp3_gp4_80, word16, 0)) - SEQ(gp0_gp1, gp2)) * Mem0[0x8125<p16>:real48]
	word32 gp0_gp1_100 = CONVERT(gp5_gp6_gp7_95, real48, int32)
	real48 gp5_gp6_gp7_109 = gp5_gp6_gp7_95 - CONVERT(gp0_gp1_100, word32, real48)
	word16 gp7_110 = SLICE(gp5_gp6_gp7_109, word16, 0)
	word16 gp2_115 = SLICE(gp5_gp6_gp7_109, word16, 16)
	word16 gp3_116 = SLICE(gp5_gp6_gp7_109, word16, 0)
	branch gp5_gp6_gp7_109 >= 0.0 l0000039E
l0000039E:
	word16 gp1_122 = SLICE(gp0_gp1_100 + Mem0[gp12 + 0x20<16>:real32], word16, 0)
	gp9_124 = 6<16>
l03A0:
	Mem128[gp11:word16] = gp2
	gp11 = gp11 + 1<16>
	gp9_124 = gp9_124 - 1<16>
	gp1_gp2_343 = SEQ(gp1_122, gp2_115) (alias)
	branch gp9_124 != 0<16> l03A0
l0000033F:
	word32 gp0_gp1_137 = gp0_gp1_100 + Mem0[0x812B<p16>:word32]
	gp9_124 = gp1 (alias)
	gp1_gp2_343 = SEQ(SLICE(gp0_gp1_137, word16, 0), SLICE(SEQ(wArg44, gp3_116, gp7_110) + Mem0[0x8128<p16>:real48], word16, 32)) (alias)
	branch gp0_gp1 >= 0<32> l000003A5
l000003A5:
	word16 gp11_147 = gp11 - 1<16>
	Mem153[gp11_147:word16] = SEQ(Mem151[gp11_147 + 1<16>:byte], SLICE(gp9_124, byte, 0))
	word16 gp1_155 = SLICE(gp1_gp2_343, word16, 16)
	branch gp1_155 >= 0<16> l000003B5
l000003AB_thunk_fn000003B4:
	word16 gp1_173
	word16 gp2_179
	fn000003B4(gp1_gp2_343, gp12_gp13, gp9_124, 0x20<16>, gp11_147, fp, out gp1_173, out gp2_179)
	return gp2_179
l000003AC:
	branch gp1_155 != 0x8000<16> l000003B4
l000003B0_thunk_fn000003B4:
	word16 gp1_197
	word16 gp2_203
	fn000003B4(gp1_gp2_343, gp12_gp13, gp9_124, 0x2D<16>, gp11_147, fp, out gp1_197, out gp2_203)
	return gp2_203
l000003B1:
l000003B1_thunk_fn000003B2:
	word16 gp1_220
	word16 gp2_226
	fn000003B2(gp1_gp2_343, gp12_gp13, gp9_124, 0x2D<16>, gp11_147, fp, out gp1_220, out gp2_226)
	return gp2_226
l00000346:
	word16 gp1_244
	word16 gp14_245
	fn02BF(SLICE(gp0_gp1_137 + Mem0[0x812D<p16>:word32], word16, 0), wArgC6, out gp1_244, out gp14_245)
	return wArg49
fn032A_exit:


word16 fn034E(word32 gp0_gp1, word32 gp12_gp13, word16 gp2, word16 gp8, word16 gp9, word16 gp10, word16 gp11, word16 wArg66, word16 wArgC6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
// MayUse:  gp10:[0..15] gp11:[0..15] gp2:[0..15] gp8:[0..15] gp9:[0..15] Sequence gp0:gp1:[0..31] Sequence gp12:gp13:[0..31] Stack +0066:[0..15] Stack +00C6:[0..15]
// LiveOut: gp15 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp15 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved:
fn034E_entry:
	word32 gp1_gp2_14 = SEQ(SLICE(gp0_gp1, word16, 0), gp2)
l034E:
	branch gp0_gp1 >= 0<32> l00000352_thunk_fn000003B2
l00000352_thunk_fn000003B2:
	word16 gp1_22
	word16 gp2_28
	fn000003B2(gp1_gp2_14, gp12_gp13, gp9, gp10, gp11, fp, out gp1_22, out gp2_28)
	return gp2_28
l00000353:
	real48 gp2_gp3_gp4_48 = Mem0[0x812F<p16>:real48] - SEQ(gp0_gp1, gp2)
	real48 gp5_gp6_gp7_57 = SEQ(SLICE(gp2_gp3_gp4_48, word32, 0), SLICE(gp2_gp3_gp4_48, word16, 0)) * Mem0[0x8132<p16>:real48]
	word32 gp0_gp1_62 = CONVERT(gp5_gp6_gp7_57, real48, int32)
	real48 gp5_gp6_gp7_71 = gp5_gp6_gp7_57 - CONVERT(gp0_gp1_62, word32, real48)
	word16 gp7_72 = SLICE(gp5_gp6_gp7_71, word16, 0)
	word16 gp5_74 = SLICE(gp5_gp6_gp7_71, word16, 32)
	word16 gp3_78 = SLICE(gp5_gp6_gp7_71, word16, 0)
	branch gp5_gp6_gp7_71 >= 0.0 l00000360_thunk_fn000003C0
l00000360_thunk_fn000003C0:
	word16 gp1_85
	word16 gp2_91
	fn000003C0(gp12_gp13, SEQ(gp7_72, gp8), gp5_74, gp9, gp10, gp11, fp, out gp1_85, out gp2_91)
	return gp2_91
l00000361:
	word16 gp2_138 = SLICE(SEQ(wArg66, gp3_78, gp7_72) + Mem0[0x8135<p16>:real48], word16, 32)
	word16 gp1_114
	word16 gp14_115
	fn02BF(SLICE(gp0_gp1_62 + Mem0[0x8138<p16>:word32] + Mem0[0x813A<p16>:word32], word16, 0), wArgC6, out gp1_114, out gp14_115)
	return gp2_138
fn034E_exit:


word16 fn000003B2(word32 gp1_gp2, word32 gp12_gp13, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn034E
// MayUse:  gp10:[0..15] gp11:[0..15] gp14:[0..15] gp9:[0..15] Sequence gp1:gp2:[0..31] Sequence gp12:gp13:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn000003B2_entry:
	word16 gp1 = SLICE(gp1_gp2, word16, 16)
	word16 gp2 = SLICE(gp1_gp2, word16, 0)
l000003B2:
	branch Z l000003B2_thunk_fn000003B4
l000003B2_thunk_fn000003B4:
	word16 gp1_72
	word16 gp2_78
	word16 gp0_71 = fn000003B4(gp1_gp2, gp12_gp13, gp9, gp10, gp11, gp14, out gp1_72, out gp2_78)
	gp1Out = gp1_72
	gp2Out = gp2_78
	return gp0_71
l000003B2_thunk_fn000003B3:
	word16 gp1_92
	word16 gp2_98
	word16 gp0_91 = fn000003B3(gp12_gp13, gp1, gp2, gp9, gp10, gp11, gp14, out gp1_92, out gp2_98)
	gp1Out = gp1_92
	gp2Out = gp2_98
	return gp0_91
fn000003B2_exit:


word16 fn000003B3(word32 gp12_gp13, word16 gp1, word16 gp2, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn000003B2
// MayUse:  gp1:[0..15] gp10:[0..15] gp11:[0..15] gp14:[0..15] gp2:[0..15] gp9:[0..15] Sequence gp12:gp13:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn000003B3_entry:
l000003B3:
l000003B3_thunk_fn000003B4:
	word16 gp1_16
	word16 gp2_22
	word16 gp0_15 = fn000003B4(SEQ(gp1, gp2 + 1<16>), gp12_gp13, gp9, gp10, gp11, gp14, out gp1_16, out gp2_22)
	gp1Out = gp1_16
	gp2Out = gp2_22
	return gp0_15
fn000003B3_exit:


word16 fn000003B4(word32 gp1_gp2, word32 gp12_gp13, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn000003B2
// MayUse:  gp10:[0..15] gp11:[0..15] gp14:[0..15] gp9:[0..15] Sequence gp1:gp2:[0..31] Sequence gp12:gp13:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn000003B4_entry:
l000003B4:
	word32 gp1_gp2_6 = -gp1_gp2
l000003B5:
	word16 gp5_29 = SLICE(gp1_gp2_6 - (gp1_gp2_6 / 0xA<32>) * 0xA<32>, word16, 0)
l000003BF_thunk_fn000003C0:
	word16 gp1_42
	word16 gp2_48
	word16 gp0_41 = fn000003C0(gp12_gp13, 0xA<32>, gp5_29 + 0x30<16>, gp9 + 1<16>, gp10, gp11, gp14, out gp1_42, out gp2_48)
	gp1Out = gp1_42
	gp2Out = gp2_48
	return gp0_41
fn000003B4_exit:


word16 fn000003C0(word32 gp12_gp13, word32 gp7_gp8, word16 gp5, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn034E
//      fn000003B4
// MayUse:  gp10:[0..15] gp11:[0..15] gp14:[0..15] gp5:[0..15] gp9:[0..15] Sequence gp12:gp13:[0..31] Sequence gp7:gp8:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn000003C0_entry:
l000003C0:
	branch Z l000003C0_thunk_fn000003C5
l000003C0_thunk_fn000003C5:
	word16 gp2_80
	word16 gp1_81
	word16 gp0_76 = fn000003C5(gp12_gp13, gp7_gp8, gp5, gp9, gp10, gp11, gp14, out gp1_81, out gp2_80)
	gp1Out = gp1_81
	gp2Out = gp2_80
	return gp0_76
l000003C0_thunk_fn000003C1:
	word16 gp1_99
	word16 gp2_105
	word16 gp0_98 = fn000003C1(gp12_gp13, gp7_gp8, gp5, gp9, gp10, gp11, gp14, out gp1_99, out gp2_105)
	gp1Out = gp1_99
	gp2Out = gp2_105
	return gp0_98
fn000003C0_exit:


word16 fn000003C1(word32 gp12_gp13, word32 gp7_gp8, word16 gp5, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn000003C0
// MayUse:  gp10:[0..15] gp11:[0..15] gp14:[0..15] gp5:[0..15] gp9:[0..15] Sequence gp12:gp13:[0..31] Sequence gp7:gp8:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn000003C1_entry:
l000003C1:
	Mem8[gp11:word16] = SEQ(SLICE(gp5, byte, 0), Mem0[gp11:byte])
l000003C4_thunk_fn000003C5:
	word16 gp2_24
	word16 gp1_25
	word16 gp0_20 = fn000003C5(gp12_gp13, gp7_gp8, gp5, gp9, gp10, gp11 - 1<16>, gp14, out gp1_25, out gp2_24)
	gp1Out = gp1_25
	gp2Out = gp2_24
	return gp0_20
fn000003C1_exit:


word16 fn000003C5(word32 gp12_gp13, word32 gp7_gp8, word16 gp5, word16 gp9, word16 gp10, word16 gp11, word16 gp14, ptr16 & gp1Out, ptr16 & gp2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn000003C0
// MayUse:  gp10:[0..7] gp11:[0..15] gp14:[0..15] gp5:[0..7] gp9:[0..15] Sequence gp12:gp13:[0..31] Sequence gp7:gp8:[0..31]
// LiveOut: gp0 gp1 gp2
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp15 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved:
fn000003C5_entry:
	byte bArg01_74 = SLICE(wArg00, byte, 0)
	byte bArg02 = SLICE(wArg02, byte, 0)
l000003C5:
	Mem8[gp11:word16] = SEQ(Mem0[gp11 + 1<16>:byte], SLICE(gp5, byte, 0))
l000003C7:
	word32 gp12_gp13_15 = gp12_gp13 / gp7_gp8
	branch gp12_gp13_15 != 0<32> l000003C8_thunk_fn00000418
l000003C8_thunk_fn00000418:
	word16 gp2_25
	word16 gp14_149
	word16 gp0_21 = fn00000418(SEQ(gp12_gp13_15, gp14), out gp2_25, out gp14_149)
	gp1Out = gp1
	gp2Out = gp2_25
	return gp0_21
l000003C9:
	branch Test(NE,(gp9 + 1<16> & 0x8000<u16>) == 0<16>) l000003D0
l000003D0:
	Mem39[gp11:word16] = SEQ(SLICE(gp10, byte, 0), Mem8[gp11:byte])
l000003CD:
	Mem42[gp11:word16] = SEQ(Mem8[gp11 + 1<16>:byte], SLICE(gp10, byte, 0))
l000003D2:
	gp1Out = SEQ(bArg01_74, bArg02)
	gp2Out = wArg02
	return wArg00
fn000003C5_exit:


word16 fn03E0(word32 gp1_gp2, word16 gp0, word16 gp3, ptr16 & gp1Out, ptr16 & gp2Out, ptr16 & gp3Out, ptr16 & gp8Out, ptr16 & gp12Out, ptr16 & gp13Out, ptr16 & gp14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn04AE
// MayUse:  gp0:[0..15] gp3:[0..15] Sequence gp1:gp2:[0..31]
// LiveOut: gp0 gp1 gp12 gp13 gp14 gp2 gp3 gp8
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn03E0_entry:
	word16 gp2 = SLICE(gp1_gp2, word16, 0)
	word16 gp1 = SLICE(gp1_gp2, word16, 16)
l03E0:
	Mem51[gp0 + 0xA<16>:word16] = 0<16>
	byte bLoc0C_116 = SLICE(gp2, byte, 0)
	word16 gp14_59 = fn03EC(0<16>, 0xB<16>, gp0, gp1, gp2, gp3)
	gp1Out = SEQ(SLICE(gp1, byte, 0), bLoc0C_116)
	byte bLoc0B_118 = SLICE(gp3, byte, 0)
	gp2Out = SEQ(bLoc0C_116, bLoc0B_118)
	gp3Out = SEQ(bLoc0B_118, SLICE(gp4, byte, 0))
	gp8Out = SEQ(SLICE(gp8, byte, 0), SLICE(gp9, byte, 0))
	byte bLoc01_138 = SLICE(gp13, byte, 0)
	gp12Out = SEQ(SLICE(gp12, byte, 0), bLoc01_138)
	gp13Out = SEQ(bLoc01_138, SLICE(gp14, byte, 0))
	gp14Out = gp14_59
	return gp1
fn03E0_exit:


word16 fn03EC(word16 gp0, word16 gp1, word16 gp11, word16 gp12, word16 gp13, word16 gp14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn03E0
// MayUse:  gp0:[0..15] gp1:[0..15] gp11:[0..15] gp12:[0..15] gp13:[0..15] gp14:[0..15]
// LiveOut: gp14
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7
// Preserved: gp15
fn03EC_entry:
l03EC:
	real48 gp12_gp13_gp14_301
	word16 gp0_16
	branch Test(EQ,(gp12 & 1<u16>) == 0<16>) l000003FE
l000003FE:
	gp0 = gp0 | gp12 | gp13 | gp14
	branch gp0 == 0<16> l00000404
l00000402:
	branch Test(EQ,(gp12 & 2<u16>) == 0<16>) l000003F5
l00000404:
	gp0_16 = 0x2B20<16>
	gp12_gp13_gp14_301 = SEQ(gp12, gp13, gp14) (alias)
l000003EE:
	branch Test(NE,(gp12 & 2<u16>) == 0<16>) l000003F5
l000003F5:
	gp12 = 7<16>
	branch gp1 == 6<16> l000003FB
l000003FA:
	gp12 = 0xA<16>
l000003FB:
	__mov(gp11, 0x0613<p16>)
l000003F0:
	gp0_16 = 0x2D20<16>
	gp12_gp13_gp14_301 = SEQ(gp12, gp13, gp14) * Mem0[0x0610<p16>:real48]
l00000406:
	Mem49[gp11:word16] = gp0_16
	word16 gp2_184 = 0<16>
	real48 gp12_gp13_gp14_183 = gp12_gp13_gp14_301
	branch Test(NE,(SLICE(gp12_gp13_gp14_301, word16, 16) & 0x100<u16>) == 0<16>) l00000415
l0000040A_thunk_fn00000418:
	word16 gp14_64
	word16 gp2_303
	fn00000418(gp12_gp13_gp14_301, out gp2_303, out gp14_64)
	return gp14_64
l0000040B:
	branch gp12_gp13_gp14_183 < Mem49[0x060A<p16>:real48] l00000412
l00000412:
l0000041F:
	branch gp1 == 6<16> l00000424
l00000424:
	Mem83[gp11 + 5<16>:word16] = 0x452B<16>
l00000421:
	Mem84[gp11 + 8<16>:word16] = 0x452B<16>
l00000426:
	word16 gp2_88 = gp2_184 / 0xA<16>
	word16 gp2_91 = __xbr(gp2_88) | gp2_88 % 0xA<16>
	branch gp1 == 6<16> l00000430
l00000430:
	Mem97[gp11 + 6<16>:word16] = gp2_91 | 0x3030<16>
l0000042D:
	Mem98[gp11 + 9<16>:word16] = gp2_91 | 0x3030<16>
l00000432:
	word32 gp2_gp3_113 = CONVERT(gp12_gp13_gp14_183, real48, int32)
	Mem129[gp11:word16] = SEQ(Mem127[gp11 + 1<16>:byte], SLICE(SLICE(gp2_gp3_113, word16, 0) + 0x30<16>, byte, 0))
	Mem134[gp11 + 1<16>:word16] = SEQ(0x2E<8>, Mem129[gp11 + 1<16>:byte])
	word16 gp7_160 = 0<16>
	real48 gp12_gp13_gp14_122 = gp12_gp13_gp14_183 - CONVERT(gp2_gp3_113, word32, real48)
l0441:
	real48 gp12_gp13_gp14_140 = gp12_gp13_gp14_122 * Mem139[0x060A<p16>:real48]
	word32 gp2_gp3_149 = CONVERT(SEQ(SLICE(gp12_gp13_gp14_140, word32, 0), SLICE(gp12_gp13_gp14_140, word16, 0)), real48, int32)
	gp12_gp13_gp14_122 = gp12_gp13_gp14_140 - CONVERT(gp2_gp3_149, word32, real48)
	word16 gp3_151 = SLICE(gp2_gp3_149, word16, 0)
	word16 gp14_213 = SLICE(gp12_gp13_gp14_122, word16, 0)
	gp7_160 = gp7_160 + 1<16>
	branch (gp7_160 & 0x8000<u16>) == 0<16> l00000450
l00000450:
	Mem168[gp11 + 1<16>:word16] = SEQ(Mem139[gp11 + 2<16>:byte], SLICE(gp3_151 + 0x30<16>, byte, 0))
	gp11 = gp11 + 1<16>
l0000044D:
	Mem173[gp11 + 1<16>:word16] = SEQ(SLICE(gp3_151 + 0x30<16>, byte, 0), Mem139[gp11 + 1<16>:byte])
l00000453:
	gp1 = gp1 - 1<16>
	branch gp1 != 0<16> l0441
l00000455:
	Mem181[gp11 + 1<16>:word16] = 0x2020<16>
	return gp14_213
fn03EC_exit:
l0000040E:
	gp12_gp13_gp14_183 = gp12_gp13_gp14_183 / Mem49[0x060A<p16>:real48]
	gp2_184 = gp2_184 + 1<16>


word16 fn00000418(real48 gp12_gp13_gp14, ptr16 & gp2Out, ptr16 & gp14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn032A
//      fn03EC
// MayUse:  Sequence gp12:gp13:gp14:[0..47]
// LiveOut: gp0 gp14 gp2
// Trashed: CPZN gp0 gp12 gp13 gp14 gp2
// Preserved: gp15
fn00000418_entry:
	real48 gp12_gp13_gp14_31 = gp12_gp13_gp14
l00000418:
	gp12_gp13_gp14_31 = gp12_gp13_gp14_31 * Mem0[0x060A<p16>:real48]
	word16 gp0_21 = Mem0[SLICE(gp12_gp13_gp14_31, word16, 32) + 0x1F<16>:word16]
	word16 gp12_13 = SLICE(gp12_gp13_gp14_31, word16, 32)
	word16 gp14_15 = SLICE(gp12_gp13_gp14_31, word16, 0)
l00000415:
	branch gp12_gp13_gp14_31 >= Mem0[0x060D<p16>:real48] l00000477
l00000477:
	word16 gp2_19 = Mem0[gp12_13 + 0x37<16>:word16]
	fn045A(gp0_21)
	gp2Out = gp2_19
	gp14Out = gp14_15
	return gp0_21
fn00000418_exit:


void fn045A(word16 gp0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
//      fn03EC
//      fn045D
//      fn04B9
// MayUse:  gp0:[0..15]
// LiveOut:
// Trashed:
// Preserved: gp15
fn045A_entry:
l045A:
	__console_output(gp0)
	return
fn045A_exit:


word16 fn045D(word16 gp0, ptr16 & gp10Out, ptr16 & gp11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn04AE
// MayUse:  gp0:[0..15]
// LiveOut: gp10 gp11 gp9
// Trashed: PZN gp0 gp10 gp11 gp9
// Preserved: C gp15
fn045D_entry:
l045D:
	byte bArg00_49 = SLICE(gp12, byte, 0)
	byte bLoc01_48 = SLICE(gp11, byte, 0)
	word16 gp11_13 = gp0
	word16 gp0_14 = 0<16>
l00000460:
	byte bLoc02_43 = SLICE(gp10, byte, 0)
	word16 gp0_19 = SEQ(Mem11[gp11_13:byte], SLICE(gp0_14, byte, 0))
	branch gp0_19 == 0<16> l0000046C
l00000463:
	fn045A(gp0_19)
	gp0_14 = SEQ(Mem11[gp11_13:byte], Mem11[gp11_13:byte])
	branch gp0_14 == 0<16> l0000046C
l0000046C:
	gp10Out = SEQ(bLoc02_43, bLoc01_48)
	gp11Out = SEQ(bLoc01_48, bArg00_49)
	return gp10
fn045D_exit:
l00000468:
	fn045A(gp0_14)
	gp11_13 = gp11_13 + 1<16>


word16 fn04AE(word32 gp0_gp1, word16 gp2, ptr16 & gp8Out, ptr16 & gp9Out, ptr16 & gp10Out, ptr16 & gp11Out, ptr16 & gp14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
// MayUse:  gp2:[0..15] Sequence gp0:gp1:[0..31]
// LiveOut: gp10 gp11 gp14 gp3 gp8 gp9
// Trashed: CPZN gp0 gp1 gp10 gp11 gp12 gp13 gp14 gp2 gp3 gp4 gp5 gp6 gp7 gp8 gp9
// Preserved: gp15
fn04AE_entry:
l04AE:
	word16 gp12_24
	word16 gp13_25
	word16 gp14_26
	word16 gp3_28
	word16 gp8_33
	word16 gp10_40
	word16 gp11_41
	word16 gp1_66
	word16 gp2_67
	word16 gp9_42 = fn045D(fn03E0(gp0_gp1, 0x813C<16>, gp2, out gp1_66, out gp2_67, out gp3_28, out gp8_33, out gp12_24, out gp13_25, out gp14_26), out gp10_40, out gp11_41)
	gp8Out = gp8_33
	gp9Out = gp9_42
	gp10Out = gp10_40
	gp11Out = gp11_41
	gp14Out = gp14_26
	return gp3_28
fn04AE_exit:


void fn04B9(word16 gp0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0111
// MayUse:  gp0:[0..15]
// LiveOut:
// Trashed: PZN gp0 gp1
// Preserved: C gp15
fn04B9_entry:
l04B9:
	word16 gp1_11 = gp0
l000004BA:
	word16 gp0_8 = Mem0[gp1_11:word16]
	branch gp0_8 == 0<16> l000004C1
l000004C1:
	return
fn04B9_exit:
l000004BD:
	fn045A(gp0_8)
	gp1_11 = gp1_11 + 1<16>


